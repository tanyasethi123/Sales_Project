@model IEnumerable<SalesProject.Model.SalesViewModel>


@{
    ViewBag.Title = "Index";
}
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Core.Common;

<link rel="stylesheet" href="~/css/site.css" media="all" asp-append-version="true" />

<h1 style="text-align:center">Supermarket Sales Data</h1>

<div>
   @Html.ActionLink("Create New", "Create", new { },new { @class= "navigate-item" })
    @Html.ActionLink("Analyze Data", "Analyze", new { }, new { @class = "navigate-item" })

</div>

@using (Html.BeginForm("Index", "SalesController", FormMethod.Get))
{
    <p>
        Find by Invoice Id: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
@if (ViewBag.Message != null)
{

    <p class="alert alert-success" role="alert">
        @ViewBag.Message
    </p>
}



<table class="table salesTable">
    <tr>
        <th>
            @Html.ActionLink("Invoice ID", "Index", new { sortOrder = ViewBag.InvoiceSortParam, currentFilter = ViewBag.CurrentFilter }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.ActionLink("Customer Type", "Index", new { sortOrder = ViewBag.CustomerSortParm }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.ActionLink("Gender", "Index", new { sortOrder = ViewBag.GenderSortParm }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.ActionLink("Product Category", "Index", new { sortOrder = ViewBag.ProductSortParm }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.ActionLink("Branch", "Index", new { sortOrder = ViewBag.BranchSortParm }, new { @class = "hyperlink" })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.unit_price)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.quantity_sold)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.total_sales_after_taxes)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.payment_type)
        </th>
        <th>Actions</th>
    </tr>


    @if (Model != null && Model.Count() > 0)
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.invoice_id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.customer_type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.datetime_of_purchase)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.product_category)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.branch)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.unit_price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.quantity_sold)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.total_sales_after_taxes)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.payment_type)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.invoice_id }) |
                    @*@Html.ActionLink("Details", "Detail", new { id = item.invoice_id }) |*@
                    @Html.ActionLink("Delete", "Delete", new { id = item.invoice_id })
                </td>
            </tr>
        }
    }
    else
    {
        <td colspan="4" class="text-center"><b>No Data Available . Please Add Data By CLick On Create Button</b></td>
    }
</table>


<div class="row">

    @Html.PagedListPager((IPagedList)Model!, page => Url.Action("Index", new
    {
        page,
        sortOrder = ViewBag.InvoiceSortParam,
        currentFilter = ViewBag.CurrentFilter
    }),
    new PagedListRenderOptions
    {
        DisplayLinkToIndividualPages = true,
        DisplayPageCountAndCurrentLocation = false,
        MaximumPageNumbersToDisplay = 10,
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" },


    })
</div>
@section Scripts{
    <script>// Workaround to fix style of text for showing items .. through ..
        // Problem related to Boostrap 4 according to issue in link below
        // https://github.com/dncuug/X.PagedList/issues/127
        $(document).ready(function () {
            $('ul.pagination > li.disabled > a').addClass('page-link');
        });</script>
}